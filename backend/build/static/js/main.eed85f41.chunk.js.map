{"version":3,"sources":["pages/Home/Home.tsx","types.ts","redux/actions/product.ts","redux/actions/cart.ts","redux/actions/user.ts","components/ProductCard/ProductCard.tsx","pages/ProductCatalog/ProductCatalog.tsx","components/NavBar/Navbar.tsx","hooks/useUser.ts","components/Cart/Cart.tsx","components/Searchbar/Searchbar.tsx","assets/images/fb-icon.png","assets/images/instagram-icon.png","assets/images/linkedin-icon.png","components/Header/Header.tsx","components/Notification/Notification.tsx","components/AddNewProduct/AddNewProduct.tsx","components/Signup/Signup.tsx","components/Login/Login.tsx","pages/Dashboard/Dashboard.tsx","components/DashBoardUserForm/DashBoardUserForm.tsx","components/ProductDetails/ProductDetails.tsx","App.tsx","reportWebVitals.ts","redux/reducers/product.ts","redux/reducers/user.ts","redux/reducers/cart.ts","redux/reducers/index.ts","redux/store.ts","index.tsx"],"names":["useStyles","makeStyles","homeContainer","marginTop","display","justifyContent","alignItems","Home","classes","className","Typography","variant","component","GET_PRODUCT_SUCCESS","CREATE_NEW_PRODUCT","SIGN_IN_SUCCESS","GET_USER_ROLE","GET_USER_NAME","GET_USER_ID","GET_USERS","DIALOG_DATA","ITEMS_IN_CART","SEARCH_KEYWORD","FETCH_PENDING","FETCH_ERROR","fetchProduct","dispatch","a","fetch","response","json","data","getProductsSuccess","type","payload","createProduct","history","axios","post","then","res","push","catch","err","console","log","fetchCart","userId","get","getItemsInCart","items","addItemToCart","purchasedBy","createNewUser","from","fetchUser","message","createUserError","getSignedInStatus","isUserSignedIn","getUserRole","getUserName","getUsers","getUserId","getDialogData","dialog","root","width","paddingTop","padding","stock","color","backdrop","zIndex","backgroundColor","ProductCard","prod","useDispatch","useHistory","useSelector","state","user","role","useState","addToCartBtn","setAddToCartBtn","quantity","handelDelete","id","window","confirm","delete","deleteProduct","Card","CardActionArea","to","_id","CardMedia","alt","name","image","productImage","height","title","CardContent","gutterBottom","price","CardActions","Grid","container","Button","size","onClick","disabled","prodId","productId","React","memo","ProductCatalog","product","displayProduct","searchProduct","filter","toLocaleLowerCase","includes","useEffect","item","sm","spacing","justify","alignContent","map","md","lg","CircularProgress","theme","nav","nav_item","listStyle","nav_link","textDecoration","fontSize","Navbar","Box","useUser","isSignedIn","fetchCookie","resloggedIn","signedin","resRole","resName","createStyles","media","card","margin","textColor","button","Cart","inCart","cart","flexDirection","src","location","reload","Math","round","totalAmount","inputRoot","inputInput","paddingLeft","transition","transitions","create","breakpoints","up","Searchbar","InputBase","placeholder","input","onChange","e","text","target","value","inputProps","images","socialMediaContainer","listItem","listStyleType","logo","Header","pending","cartOpen","setCartOpen","totalQuantity","reduce","sum","i","xs","my","href","fbIcon","instaIcon","liIcon","p","m","pr","Drawer","anchor","open","onClose","Badge","badgeContent","Notification","props","notify","setNotify","Snackbar","isOpen","autoHideDuration","anchorOrigin","vertical","horizontal","event","reason","Alert","severity","extendedIcon","marginRight","initState","description","categories","variants","sizes","validationSchema","Yup","shape","min","required","AddNewProduct","useParams","filteredData","selectedImage","setselectedImage","baseUrl","process","handleFileInputChange","file","files","previewFile","reader","FileReader","readAsDataURL","onloadend","handelSave","values","put","editProduct","initialValues","onSubmit","formData","FormData","append","withCredentials","secure_url","productImageUrl","errors","touched","setFieldValue","setFieldTouched","encType","direction","TextField","label","as","aria-labelledby","paper","avatar","palette","secondary","main","form","submit","initialState","firstName","lastName","email","password","yup","SignUp","error","formik","useFormik","Container","maxWidth","CssBaseline","noValidate","handleSubmit","autoComplete","fullWidth","autoFocus","handleChange","Boolean","helperText","Copyright","align","Link","Date","getFullYear","SignIn","loginData","userLogin","mt","table","minWidth","tableContainer","Dashboard","users","tableHeaders","handleDelete","deleteUser","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","colSpan","length","theader","TableBody","DashBoardUserForm","handleUpdate","updateUser","dataValue","select","defaultValue","MenuItem","objectFit","ProductDetails","defaults","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","action","find","cartInitState","undefined","createRootReducer","combineReducers","middlewares","thunk","composeEnhancers","compose","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","WithProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eed85f41.chunk.js","sourcesContent":["// import React, { useEffect } from 'react'\n// import axios from 'axios'\n// import { useDispatch } from 'react-redux'\n// import { getUserRole, getSignedInStatus } from '../../redux/actions/user';\nimport { makeStyles, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    homeContainer: {\n      marginTop: 50,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n\n    }\n  });\n  \nfunction Home() {\n  const classes = useStyles();\n\n    return (\n        <div className={classes.homeContainer}>\n           <Typography variant=\"h1\" component=\"h1\">Welcome dear customers.</Typography>\n        </div>\n    )\n}\n\nexport default Home\n","\nexport const GET_PRODUCT_SUCCESS = 'GET_PRODUCT_SUCCESS'\nexport const CREATE_NEW_PRODUCT = 'CREATE_NEW_PRODUCT'\nexport const CREATE_NEW_USER = 'CREATE_NEW_USER'\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS'\nexport const GET_USER_ROLE = 'GET_USER_ROLE'\nexport const GET_USER_NAME = 'GET_USER_NAME'\nexport const GET_USER_ID = 'GET_USER_ID'\nexport const GET_USERS = 'GET_USERS'\nexport const EDIT_USER = 'EDIT_USER'\nexport const DIALOG_DATA= 'DIALOG_DATA'\nexport const ITEMS_IN_CART= 'ITEMS_IN_CART'\nexport const SEARCH_KEYWORD = 'SEARCH_KEYWORD'\nexport const FETCH_PENDING = 'FETCH_PENDING'\nexport const FETCH_ERROR = 'FETCH_ERROR'\n\nexport type Product = {\n    _id?: string\n    name: string;\n    description: string;\n    categories: string;\n    variants: string[];\n    sizes: string[];\n    price: number;\n    quantity: number;\n    productImage?: string;\n}\n\nexport type SearchProduct = {\n    type: typeof SEARCH_KEYWORD\n    payload: {\n      text: string\n    }\n  }\n\nexport type GetProductSuccess = {\n    type: typeof GET_PRODUCT_SUCCESS,\n    payload: {\n        data: Product[]\n    }\n}\n\nexport type CreateProduct = {\n    type: typeof CREATE_NEW_PRODUCT,\n    payload: {\n        data: Product\n    }\n}\n\nexport type User = {\n    _id?: string\n    firstName: string\n    lastName: string\n    email: string\n    password: string\n    role?: string\n}\n\nexport type UserLogIn = {\n    email: string\n  password: string\n}\n\nexport type CreateNewUser = {\n    type: typeof CREATE_NEW_USER,\n    payload: {\n        data: User\n    }\n}\n\nexport type CreateNewUserError ={\n    type: typeof FETCH_ERROR,\n    payload: {\n        data: Error | null\n    }\n}\nexport type SigninSuccess = {\n    type: typeof SIGN_IN_SUCCESS,\n    payload: {\n        isUserSignedIn: boolean,\n    }\n}\n\nexport type GetUserRole = {\n    type: typeof GET_USER_ROLE, \n    payload: {\n        data: string,\n    }\n}\nexport type GetUserName = {\n    type: typeof GET_USER_NAME, \n    payload: {\n        data: string,\n    }\n}\n\nexport type GetUserId = {\n    type: typeof GET_USER_ID,\n    payload: {\n        data: string,\n    }\n}\nexport type GetUsers = {\n    type: typeof GET_USERS, \n    payload: {\n        data: User[],\n    }\n}\n\nexport type EditUser = {\n    type: typeof EDIT_USER, \n    payload: {\n        data: User,\n    }\n}\n\n\nexport type DialogState = {\n    isOpen: boolean,\n    title: string,\n    type: string,\n}\nexport type GetDialogData = {\n    type: typeof DIALOG_DATA,\n    payload: {\n        dialog: DialogState\n    }\n}\n\ntype itemsInCart = {\n    productId: Product;\n    quantity: number;\n}\n\ntype addItemsToCart = {\n    productId: string;\n    quantity: number;\n}\n\nexport type Cart = {\n    purchasedBy: string;\n    items: itemsInCart[];\n    totalAmount: number;\n}\n\n\nexport type ItemToCart = {\n    purchasedBy: string;\n    items: addItemsToCart[]\n}\n\nexport type AddToCart = {\n    type: typeof ITEMS_IN_CART,\n    payload: {\n        items: Cart | undefined\n    }\n}\n\nexport type FetchDataLoader = {\n    type: typeof FETCH_PENDING,\n}\n\nexport type ProductActions = GetProductSuccess | CreateProduct | SearchProduct \n\nexport type UserActions = CreateNewUser | SigninSuccess | GetUserRole | GetUserName | GetUsers | EditUser | GetDialogData | GetUserId | FetchDataLoader | CreateNewUserError\n\nexport type CartActions = AddToCart | FetchDataLoader\n\nexport type ProductState = {\n    displayProduct: Product[],\n    searchProduct: string\n}\n\nexport type UserState = {\n    isSignedIn: boolean,\n    role: string,\n    name: string,\n    userId: string,\n    users: User[],\n    dialog: DialogState,\n    pending: boolean,\n    error: Error | null\n}\n\nexport type CartState = {\n    inCart: Cart | undefined,\n    pending: boolean\n}\n\nexport type AppState = {\n    product: ProductState,\n    user: UserState,\n    cart: CartState,\n}","import { Dispatch } from \"redux\"\nimport axios from 'axios'\n\nimport { CREATE_NEW_PRODUCT, GET_PRODUCT_SUCCESS, Product, ProductActions, SEARCH_KEYWORD } from \"../../types\"\n// import { CircularProgress } from \"@material-ui/core\"\n\nexport const fetchProduct = () => {\n    return async (dispatch: Dispatch) => {\n        const response = await fetch('/products')\n        const data = await response.json()\n        dispatch(getProductsSuccess(data))\n    }\n}\nexport const getProductsSuccess = (data: Product[]): ProductActions => {\n    return {\n      type: GET_PRODUCT_SUCCESS,\n      payload: {\n        data,\n      },\n    }\n  }\n\nexport const createProduct = (data: Product, history: any) => {\n  return async (dispatch: Dispatch) => {\n    axios.post('/products', data)\n      .then( res => {\n        if(res.data){\n          return history.push('/product')\n        }\n      })\n      .catch( err => console.log(err))\n\n  }\n}\n\n\nexport const editProduct = (data: Product, history: any) => {\n  return async (dispatch: Dispatch) => {\n    axios.put(`/products/${data._id}`, data)\n      .then( res => {\n        if(res.data){\n          fetchProduct()\n          history.push('/product');\n        }\n      })\n      .catch( err => console.log(err))\n\n  }\n}\n\nexport const deleteProduct = (id: string, history: any) => {\n  return async (dispatch: Dispatch) => {\n    axios.delete(`/products/${id}`)\n      .then( res => {\n        if(res.data) {\n          fetchProduct()\n          return history.push('/product') \n        }\n      })\n      .catch( err => console.log(err))\n\n  }\n}\n\nexport const addProduct = (data: Product): ProductActions => {\n  return {\n    type: CREATE_NEW_PRODUCT,\n    payload: {\n      data,\n    }\n  }\n}\n\nexport const searchProduct = (text: string, history: any): ProductActions => {\n  history.push('/product')\n  return {\n    type: SEARCH_KEYWORD,\n    payload: {\n      text,\n    }\n  }\n}","import axios from \"axios\"\nimport { Dispatch } from \"redux\"\nimport { Cart, CartActions, FETCH_PENDING, ITEMS_IN_CART, ItemToCart } from \"../../types\"\n\nexport const fetchCart = (userId: string) => {\n    return async (dispatch: Dispatch) => {\n        if(userId) {\n            axios.get(`/cart/${userId}`)\n            .then(res => {\n                if(res.data){\n                    dispatch(getItemsInCart(res.data))\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        }\n       \n    }\n}\n\nexport const getItemsInCart = (items: Cart): CartActions => {\n    return {\n        type: ITEMS_IN_CART,\n        payload: {\n            items,\n        }\n    }\n}\n\nexport const addItemToCart = (data: ItemToCart) => {\n    return async (dispatch: Dispatch) => {\n        axios.post('/cart', data)\n            .then( res => {\n                if(res.data) {\n                    fetchCart(data.purchasedBy)\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n}\n\nexport const fetchPendingItems = (): CartActions => {\n    return {\n      type: FETCH_PENDING,\n    }\n  }","import axios from \"axios\"\nimport { Dispatch } from \"redux\"\nimport { GET_USER_ROLE, SIGN_IN_SUCCESS, User, UserActions, UserLogIn, GET_USER_NAME, GET_USERS, DialogState, DIALOG_DATA, GET_USER_ID, FETCH_PENDING, FETCH_ERROR } from \"../../types\"\nimport { getItemsInCart } from \"./cart\"\n\nexport const createNewUser = (data: User, history: any, from : string) => {\n    return async (dispatch: Dispatch) => {\n      axios.post('/users', data)\n        .then( res => {\n          if(res.data) {\n            fetchUser()\n            from === \"signup\" ? history.push('/signin') : history.push('/dashboard')\n            \n          }\n        })\n        .catch( err => {\n          if(err.response.data.message) {\n            createUserError(err.response.data.message)\n            console.log(err.response.data.message)\n          }\n        })\n    }\n  }\n\nexport const userLogin = (loginData: UserLogIn, history: any) => {\n  return async (dispatch: Dispatch) => {\n    axios.post('/users/login', loginData)\n      .then( res => {\n        dispatch(getSignedInStatus(true))\n        dispatch(getUserRole(res.data.role))\n        dispatch(getUserId(res.data.userId))\n        dispatch(getUserName(res.data.name))\n        // dispatch(fetchCart(userId))\n        res.data.role === \"admin\" ? history.push('/dashboard') : history.push('/')\n      })\n      .catch( err => console.log(err))\n  }\n}\n\nexport const userLogout = () => {\n  return async (dispatch: Dispatch) => {\n    axios.get('/users/logout')\n      .then( res => {\n        dispatch(getSignedInStatus(false))\n        dispatch(getUserRole(\"user\"))\n        dispatch(getItemsInCart({purchasedBy: \"\",\n        items: [],\n        totalAmount: 0}))\n      })\n      .catch( err => console.log(err))\n  }\n}\n\nexport const getSignedInStatus = ( isUserSignedIn: boolean): UserActions => {\n  return {\n    type: SIGN_IN_SUCCESS,\n    payload: {\n      isUserSignedIn,\n    }\n  }\n}\n\nexport const getUserRole = ( data: string): UserActions => {\n  return {\n    type: GET_USER_ROLE,\n    payload: {\n      data,\n    }\n  }\n}\n\nexport const getUserName = ( data: string): UserActions => {\n  return {\n    type: GET_USER_NAME,\n    payload: {\n      data,\n    }\n  }\n}\n\nexport const fetchUser = () => {\n  return async (dispatch: Dispatch) => {\n    axios.get('/users')\n      .then( res => dispatch(getUsers(res.data)))\n      .catch( err => console.log(err))\n  }\n}\n\nexport const getUsers = ( data: User[]): UserActions => {\n  return {\n    type: GET_USERS,\n    payload: {\n      data,\n    }\n  }\n}\n\nexport const getUserId = ( data: string): UserActions => {\n  return {\n    type: GET_USER_ID,\n    payload: {\n      data,\n    }\n  }\n}\n\nexport const deleteUser = ( data: string, history: any) => {\n  return async (dispatch: Dispatch) => {\n    axios.delete(`/users/${data}`)\n      .then( res => {\n        if(res.data) {\n          fetchUser()\n          history.push('/dashboard')\n        }\n      })\n      .catch( err => console.log(err))\n  }\n}\n\n\nexport const getDialogData = ( dialog: DialogState ): UserActions => {\n  return {\n    type: DIALOG_DATA,\n    payload: {\n      dialog,\n    }\n  }\n}\n\nexport const updateUser = (data: User, history: any) => {\n  return async (dispatch: Dispatch) => {\n    axios.put(`/users/${data._id}`, data)\n      .then( res => {\n        if(res.data) {\n          fetchUser()\n          history.push('/dashboard')\n        }\n      })\n      .catch( err => console.log(err))\n  }\n}\n\nexport const fetchPending = (): UserActions => {\n  return {\n    type: FETCH_PENDING,\n  }\n}\n\n\nexport const createUserError = ( data: Error | null): UserActions => {\n  return {\n    type: FETCH_ERROR,\n    payload: {\n      data,\n    }\n  }\n}","import React, {  useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Backdrop, CircularProgress, Grid } from '@material-ui/core';\n\nimport { AppState, Product } from '../../types';\nimport { addItemToCart, deleteProduct, fetchCart, fetchPendingItems } from '../../redux/actions';\n// import ConfirmDialog from '../ConfirmDialog/ConfirmDialog';\n\ntype ProductCardProps = {\n    prod: Product\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: 345,\n    paddingTop: 40,\n  },\n  padding: {\n      padding: 30,\n  },\n  stock: {\n    color: \"#00E041\"\n  },\n  backdrop: {\n    zIndex: 10,\n    color: '#fff',\n    backgroundColor: 'rgba(0,0,0,0.1)'\n  },\n});\n\nfunction ProductCard( {prod}: ProductCardProps) {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const { role, userId } = useSelector( (state: AppState) => state.user)\n  // const pending = useSelector( (state: AppState) => state.cart.pending)\n  // const items = useSelector( (state: AppState) => state.cart.inCart)\n  const [addToCartBtn, setAddToCartBtn] = useState(false)\n  // const [isOpen, setIsOpen] = useState(false);\n  // const [addToCartData, setAddToCartData] = useState<ItemToCart>()\n\n  //disabling add to cart button if product is not in stock\n  if(prod.quantity <= 0){\n    setAddToCartBtn(true)\n  }\n\n  // const [confirmDialog, setConfirmDialog] = useState({isOpen: false, title: '', subTitle: ''})\n  const handelDelete = (id: string) => {\n    if(window.confirm('Are you sure you want to delete this product?')){\n      dispatch(deleteProduct(id, history))\n    }\n  }\n  const handleAddToCart = (prodId: string) => {\n    // setIsOpen(true)\n      dispatch(addItemToCart({\n        purchasedBy: userId,\n        items: [{\n          productId: prodId,\n          quantity: 1\n        }]\n      }))\n      // window.location.reload()\n    // setTimeout(() => {\n    //   setIsOpen(false)\n    // }, 1000);\n  }\n\n  const handleClose = () => {\n    dispatch(fetchCart(userId))\n    // setIsOpen(false)\n  }\n  return (\n<>\n  <Card className={classes.root + classes.padding} key={prod._id}>\n    <CardActionArea>\n    <Link to={`/productdetails/${prod._id}`}>\n      <CardMedia\n        component=\"img\"\n        alt={prod.name}\n        image={prod.productImage}\n        height=\"440\"\n        title=\"Picture here\"\n      />\n      </Link>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {prod.name}\n        </Typography>\n        \n        <Typography variant=\"h6\" component=\"h1\">\n         ${prod.price}\n        </Typography>\n        {prod.quantity > 0 ? <Typography variant=\"h6\" component=\"h1\" className={classes.stock}>\n         In stock\n        </Typography> : <Typography variant=\"h6\" component=\"h1\" className={classes.stock}>\n         Out of stock\n        </Typography>}\n        \n      </CardContent>\n    </CardActionArea>\n    <CardActions>\n      { role === \"admin\" ? ( <Grid container> <Link to={`/editProduct/${prod._id}`}>\n        <Button size=\"small\" color=\"primary\"> \n          Edit\n        </Button>\n        </Link>\n        <Button size=\"small\" color=\"primary\" onClick={ ()=> prod._id && (handelDelete(prod._id))}>\n          Delete\n        </Button>\n        </Grid>\n        ) :\n       (<Button size=\"small\" color=\"primary\" disabled={addToCartBtn} onClick={() => {\n         if(prod._id){\n          handleAddToCart(prod._id)\n         }\n       }} > Add to Cart </Button> )        \n      }\n    </CardActions>\n  </Card>\n  {/* <ConfirmDialog confirmDialog={confirmDialog} /> */}\n  {/* <Backdrop className={classes.backdrop} open={isOpen} onClick={() => handleClose()}>\n            <CircularProgress color=\"inherit\" />\n  </Backdrop> */}\n\n</>\n  );\n\n\n}\n\nexport default React.memo(ProductCard)\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport ProductCard from '../../components/ProductCard/ProductCard';\n\nimport { fetchProduct } from '../../redux/actions';\nimport { AppState } from '../../types';\nimport { Grid, makeStyles } from '@material-ui/core';\n// import { Link } from 'react-router-dom';\n\n\n\nfunction ProductCatalog() {\n    const dispatch = useDispatch();\n    const { displayProduct, searchProduct } = useSelector( (state: AppState) => state.product)\n    \n    const product = displayProduct.filter( product => {\n        return product.name.toLocaleLowerCase().includes(searchProduct.toLocaleLowerCase())\n    })\n    const useStyles = makeStyles({\n        root: {\n          paddingTop: 40,\n        },\n      });\n      \n        const classes = useStyles();\n\n    useEffect( () => {\n        dispatch(fetchProduct())\n    }, [dispatch])\n\n    return (\n        <Grid container className={classes.root}>\n\n            <Grid item sm={12}>\n                <Grid item container spacing={2} justify=\"center\" alignContent=\"center\">\n                    {product ? product.map( prod => <Grid item sm={10} md={10} lg={4}>< ProductCard prod={prod} key={prod._id}/> </Grid>): <CircularProgress />\n                }\n                </Grid>\n            </Grid>\n        </Grid>\n\n    )\n}\n\nexport default ProductCatalog;","import { Box, Grid, makeStyles } from '@material-ui/core'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { AppState } from '../../types'\n// import AddNewProduct from '../AddNewProduct/AddNewProduct'\n\nconst useStyles = makeStyles((theme) => ({\n    nav: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignContent: \"center\",\n\n    },\n    nav_item: {\n        listStyle: \"none\",\n        padding: 16,\n    },\n    nav_link: {\n        textDecoration: \"none\",\n        color: \"black\",\n        fontSize: 20\n    }\n\n  }));\n\nfunction Navbar() {\n  const classes = useStyles();\n    const { role } = useSelector( (state: AppState) => state.user)\n    return (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n            { role === \"admin\"  ?\n            (\n                <Grid container>\n                    <Grid item>\n                        <ul className={classes.nav}>\n                            <li className={classes.nav_item}><Link className={classes.nav_link} to=\"/dashboard\">Dashboard</Link></li>\n                            <li className={classes.nav_item}> <Link className={classes.nav_link} to='/product'>Product</Link></li>\n                            <li className={classes.nav_item}> <Link className={classes.nav_link} to='/addProduct'>Add New Product</Link></li>\n                        </ul>\n                    </Grid>\n                </Grid>\n                ) \n                :\n                (\n                <Grid container>\n                    <Grid item>\n                    <ul className={classes.nav}>\n                        <li className={classes.nav_item}><Link className={classes.nav_link} to=\"/\">Home</Link></li>\n                        <li className={classes.nav_item}><Link className={classes.nav_link} to=\"/product\">Product</Link></li>\n                    </ul>\n                    </Grid>\n                </Grid>\n            )\n            \n        }\n        </Box>\n\n    )\n}\n\nexport default Navbar\n","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppState } from '../types';\nimport axios from 'axios'\nimport { fetchCart, fetchPending, getSignedInStatus, getUserId, getUserName, getUserRole } from '../redux/actions';\n\nfunction useUser() {\n   const dispatch = useDispatch();\n    const { isSignedIn } = useSelector( (state: AppState) => state.user)\n\n   const fetchCookie = async () => {\n    dispatch(fetchPending())\n    try {\n      const res = await axios.get('/users/isloggedin');\n      const resloggedIn =  res.data.signedin\n      const resRole =  res.data.role\n      const resName =  res.data.name\n      const userId = res.data.userId\n        dispatch(getSignedInStatus(resloggedIn))\n        dispatch(getUserRole(resRole))\n        dispatch(getUserName(resName))\n        dispatch(getUserId(userId))\n        dispatch(fetchCart(userId))\n\n        \n    } catch (e) {\n      console.log(e);\n    }\n  };\n// console.log(isSignedIn, \"still signed in?\")\n\nuseEffect( () => {\n   fetchCookie()\n}, [])\n\nreturn isSignedIn;\n\n}\n\nexport default useUser\n","import { Backdrop, Box, Button, Card, CardContent, CircularProgress, createStyles, makeStyles, Theme, Typography } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addItemToCart, fetchCart } from '../../redux/actions';\nimport { AppState } from '../../types'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: 400,\n      padding: 20,\n    },\n    media: {\n      width: 300,\n    },\n    card: {\n        margin: 10,\n    },\n    textColor: {\n        color: '#f44336',\n    },\n    button: {\n        backgroundColor: \"orange\",\n        margin: 40,\n    },\n    spacing: {\n        marginTop: 40,\n    },\n    backdrop: {\n        zIndex: 10,\n        color: '#fff',\n        backgroundColor: 'rgba(0,0,0,0.1)'\n      },\n  }),\n);\n\n\n\nfunction Cart() {\n    const classes = useStyles();\n    const dispatch = useDispatch()\n    const inCart  = useSelector( (state: AppState) => state.cart.inCart )\n    // const [isOpen, setIsOpen] = useState(false);\n\n    const handleAddToCart = (productId: string, userId: string) => {\n        // setIsOpen(true)\n        dispatch(addItemToCart({\n            purchasedBy: userId,\n            items: [{\n                productId: productId,\n                quantity: 1\n            }]\n        })\n        )\n        dispatch(fetchCart(userId))\n\n        window.location.reload()\n    }\n\n    const handleRemoveFromCart = (productId: string, userId: string) => {\n        // setIsOpen(true)\n        dispatch(addItemToCart({\n            purchasedBy: userId,\n            items: [{\n                productId: productId,\n                quantity: -1\n            }]\n        })\n        )\n        dispatch(fetchCart(userId))\n        window.location.reload()\n    }\n\n    // const handleClose = () => {\n    //     setIsOpen(false)\n    //   }\n\n    return (\n        <>\n            <Box className={classes.root} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n                <Typography className={classes.textColor} variant=\"h4\" component=\"h4\">You're Items</Typography>\n                { inCart ? inCart.items?.map( item => {\n                    return (\n                        <Card className={classes.card}>\n                            <img className={classes.media} src={item.productId.productImage} alt={item.productId.name} />\n                            <CardContent>\n                                <Typography>{item.productId.name}</Typography>\n                                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                                    <Button onClick={() => handleRemoveFromCart(item.productId._id!, inCart.purchasedBy)} >\n                                    -\n                                    </Button>\n                                    <Typography>{item.quantity}</Typography>\n                                    <Button onClick={() => handleAddToCart(item.productId._id!, inCart.purchasedBy)}>\n                                    +\n                                    </Button>\n                                </Box>\n                            </CardContent>\n                        </Card>\n                    )\n                }) : \"Cart is empty\" }\n                <Typography className={classes.spacing} variant=\"h5\" component=\"h5\" ><b>Total Amount:</b> $ {inCart ? Math.round(inCart.totalAmount * 100)/100 : 0}</Typography>\n                <Button variant=\"contained\" className={classes.button}>Proceed to Payment</Button>\n            </Box>\n        {/* <Backdrop className={classes.backdrop} open={isOpen} onClick={() => handleClose()}>\n            <CircularProgress color=\"inherit\" />\n        </Backdrop> */}\n        </>\n    )\n}\n\nexport default Cart\n","import { createStyles, InputBase, makeStyles } from '@material-ui/core'\nimport React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { searchProduct } from '../../redux/actions';\n\nconst useStyles = makeStyles((theme) => \n    // input: {\n    //     width: 200,\n    // }\n    createStyles({\n    inputRoot: {\n        color: 'inherit',\n      },\n      inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n          width: '20ch',\n        },\n      },\n    })\n);\n\nfunction Searchbar() {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const history = useHistory()\n    return (\n        <div>\n            {/* <input type=\"text\" name=\"searchbar\" id=\"\" placeholder=\"search\" /> */}\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              onChange={(e) => dispatch(searchProduct(e.target.value, history))}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n        </div>\n    )\n}\n\nexport default Searchbar;\n","export default __webpack_public_path__ + \"static/media/fb-icon.2896da88.png\";","export default __webpack_public_path__ + \"static/media/instagram-icon.ca34ae73.png\";","export default __webpack_public_path__ + \"static/media/linkedin-icon.acff5187.png\";","import React, {  useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { Badge, Box, Button, CircularProgress, Drawer, Grid, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart'\n\nimport { userLogout } from '../../redux/actions/user'\nimport { AppState } from '../../types'\nimport Navbar from '../NavBar/Navbar'\nimport useUser from '../../hooks/useUser'\nimport Cart from '../Cart/Cart';\nimport Searchbar from '../Searchbar/Searchbar';\n\nimport fbIcon from '../../assets/images/fb-icon.png'\nimport instaIcon from '../../assets/images/instagram-icon.png'\nimport liIcon from '../../assets/images/linkedin-icon.png'\n\n\nconst useStyles = makeStyles((theme) => ({\n    images: {\n        width: '30px',\n    },\n    socialMediaContainer: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    listItem: {\n        padding: theme.spacing(0, 2, 0, 0),\n        listStyleType: 'none'\n    },\n    logo: {\n        width: '60px'\n    }\n  }));\n\nfunction Header() {\n    const dispatch = useDispatch()\n    const { role, name, pending} = useSelector( (state: AppState) => state.user )\n    const { inCart } = useSelector( (state: AppState) => state.cart )\n\n    const classes = useStyles();\n    // const history = useHistory();\n    const isSignedIn = useUser();\n    const [cartOpen, setCartOpen] = useState(false)\n\n    let totalQuantity = 0;\n\n   if(inCart && inCart.items){\n    totalQuantity = inCart.items.reduce( (sum, i) => { \n        return sum + i.quantity\n   }, 0)\n   } \n\n    return (\n        <Grid container>\n            <Grid item xs={10} sm={12} >      \n                <Grid item container justify=\"center\"> <Typography variant=\"h2\" component=\"h2\">RF-STORE</Typography> </Grid>\n                <Grid item container justify=\"space-between\"> \n                    <Grid item xs={3} sm={4}>\n                    <Box my={2}  display=\"flex\" alignItems=\"center\">\n                       <ul className={classes.socialMediaContainer}>\n                           <li className={classes.listItem}>\n                               <a href=\"nothing\"><img className={classes.images} src={fbIcon} alt=\"Facebook Icon\"></img></a>\n                            </li>\n                           <li className={classes.listItem}>\n                               <a href=\"nothing\"><img className={classes.images} src={instaIcon} alt=\"Instagram Icon\"></img></a>\n                            </li>\n                           <li className={classes.listItem}>\n                               <a href=\"nothing\"><img className={classes.images} src={liIcon} alt=\"LinkedIn Icon\"></img></a>\n                            </li>\n\n                       </ul>\n                    </Box>\n                    </Grid>\n                    <Grid item xs={3} sm={4}>\n                        <Box display=\"flex\" justifyContent=\"center\" p={2}> <Searchbar /></Box>\n                    </Grid>\n\n                    { \n                    pending ?\n                    \n                    <Grid item xs={5} sm={4} container justify=\"flex-end\">\n                        <CircularProgress />\n                    </Grid>\n                    :\n                    isSignedIn ? \n                    <Grid item xs={5} sm={4} container justify=\"flex-end\">\n                        <Box m={2} pr={2} display=\"flex\" alignItems=\"center\">\n                        <Typography>Hello, {name}</Typography>\n                        </Box>\n                        <Box m={2}>\n                        <Link to=\"/\"><Button variant=\"contained\" color=\"primary\" onClick={()=> dispatch(userLogout())}>Logout</Button></Link>\n                        </Box>\n                    </Grid> \n                    : \n                    \n                    <Grid item xs={5} sm={4} container justify=\"flex-end\">\n                        <Link to=\"/signin\"><Button variant=\"contained\" color=\"primary\">Login</Button></Link>\n                        <Link to=\"/signup\"><Button variant=\"contained\" color=\"secondary\">Signup</Button></Link>\n                    </Grid>\n                  \n                    }\n                    \n                </Grid> \n                <Grid item container justify=\"flex-start\"> \n\n                    <Grid item sm={8}>\n                        <Navbar />\n                    </Grid>\n                    {role === \"user\" ? (\n                    <Grid item sm={4}>\n                        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                        <Drawer\n                        anchor=\"right\"\n                        open={cartOpen}\n                        onClose={() => setCartOpen(false)}\n                        >\n                        <Cart />\n                        </Drawer>\n                        <Button onClick={() => setCartOpen(true)}>\n                            <Badge badgeContent={totalQuantity} color=\"error\">\n                                <AddShoppingCartIcon />\n                            </Badge>\n                        </Button>\n                        </Box>\n                    </Grid>\n                    ) : \"\"}\n\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Header","import { Snackbar } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React from 'react'\n\nfunction Notification(props: any) {\n\nconst {notify, setNotify } = props;\n\nconst handleClose = (event: React.SyntheticEvent, reason: string) => {\n    if (reason === 'clickaway') {\n        return;\n    }\n    setNotify({\n        ...notify,\n        isOpen: false\n    })\n}\n    return (\n        <Snackbar\n            open={notify.isOpen}\n            autoHideDuration={2000}\n            anchorOrigin= { { vertical: 'top', horizontal: 'right'}}\n            onClose={handleClose}\n        >\n            <Alert \n                severity={notify.type}            \n            >\n                {notify.message}\n            </Alert>\n        </Snackbar>\n    )\n}\n\nexport default Notification\n","import React, { useState } from 'react'\nimport { Field, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {TextField} from 'formik-material-ui';\nimport { Box, Button, createStyles, Grid, makeStyles, Theme } from '@material-ui/core';\nimport axios from 'axios'\n\nimport { createProduct, editProduct } from '../../redux/actions';\nimport { AppState, Product } from '../../types';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Notification from '../Notification/Notification'\n\nconst preset_key = process.env.REACT_APP_CLOUDINARY_PRESET;\nconst cloudinary_name = process.env.REACT_APP_CLOUDINARY_NAME;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      margin: theme.spacing(1),\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n  }),\n);\n//initial state of form\nconst initState = {\n    name: \"\",\n    description: \"\",\n    categories: \"\",\n    variants: [],\n    sizes: [],\n    price: 0,\n    quantity: 0,\n    productImage: \"\",\n}\n\n//validate input data\nconst validationSchema = Yup.object().shape( {\n    name: Yup.string().min(2, 'Too Short').required('Required'),\n    description: Yup.string().min(10, 'Description too short').required(),\n    price: Yup.number().required(),\n    quantity: Yup.number().required()\n})\n\n//function here\nfunction AddNewProduct() {\n\n    const dispatch = useDispatch();\n    const { displayProduct } = useSelector( (state: AppState) => state.product)\n    const { _id } = useParams<{ _id: string }>()\n    const history = useHistory()\n    const filteredData = displayProduct.filter ( p => p._id === _id);\n    const [notify, setNotify] = useState({isOpen: false, message: '', type: ''})\n    const classes = useStyles();\n    const [selectedImage, setselectedImage] = useState<any | string>()\n    // const [previewSource, setPreviewSopurce] = useState(\"\")\n    const baseUrl = `https://api.cloudinary.com/v1_1/${cloudinary_name}/image/upload`\n\n    const handleFileInputChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n        const file = e.target.files![0]\n        previewFile(file)\n        setselectedImage(file)\n    }\n\n    const previewFile = async (file: any) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file)\n        reader.onloadend = async () => {\n            // const result: string = await reader.result as string\n        //    result ? setPreviewSopurce(result) : <CircularProgress />\n        }\n    }\n\n    const handelSave = (values: Product) => {\n        dispatch(editProduct(values, history))\n        setNotify({\n            isOpen: true,\n            message: 'Saved Successfully',\n            type: 'success'\n        })\n    }\n\n    const handelCancel = () => {\n        history.push('/dashboard')\n    }\n\n    return (\n      <>  \n       <Formik initialValues={_id ? filteredData[0] : initState} validationSchema={validationSchema} onSubmit={async (values) => {\n           console.log(values, \"preview source\")\n           try {\n            const formData = new FormData();\n            formData.append('file', selectedImage)\n            formData.append('upload_preset', `${preset_key}`)\n\n            const response = await axios.post(baseUrl,  formData, {withCredentials: false})\n            const data = await response.data;\n            const productImageUrl = await data.secure_url;\n            values.productImage = productImageUrl;\n            dispatch(createProduct(values, history))\n            setNotify({\n             isOpen: true,\n             message: 'Created Successfully',\n             type: 'success'\n             })\n           } catch (error) {\n               console.log(error)\n           }\n\n       }}\n       >\n           { ( {values, errors, touched, setFieldValue, setFieldTouched } )  => (\n               <Form encType=\"multipart/form-data\">\n                   <Grid  container direction=\"column\" spacing={2}>\n                        <Grid item lg={10} md={10} sm={10} xs ={10}>\n                            <Field name=\"name\" component={TextField} label=\"Product Name\">Name: </Field>\n                        </Grid>\n                        <Grid item lg={10} md={10} sm={10} xs ={10}>\n                            <Field name=\"description\" component={TextField} label=\"Description\">Description: </Field>\n                        </Grid>\n                        <Grid item>\n                            <Box id=\"select-group-categories\">Categories</Box>\n                            <Field name=\"categories\" as=\"select\" aria-labelledby=\"select-group-categories\">\n                                <option value=\"Home\">Home</option>\n                                <option value=\"Forest\">Forest</option>\n                                <option value=\"Field\">Field</option>\n                            </Field>\n                        </Grid>\n                        <Grid item>\n                            <Box id=\"checkbox-group-variants\">Variants</Box>\n                            <Box role=\"group\" aria-labelledby=\"checkbox-group-variants\" >\n                                <label>\n                                <Field type=\"checkbox\" name=\"variants\" value=\"Red\" />\n                                Red\n                                </label>\n                                <label>\n                                <Field type=\"checkbox\" name=\"variants\" value=\"Yellow\" />\n                                Yellow\n                                </label>\n                                <label>\n                                <Field type=\"checkbox\" name=\"variants\" value=\"Orange\" />\n                                Orange\n                                </label>\n                                <label>\n                                <Field type=\"checkbox\" name=\"variants\" value=\"Blue\" />\n                                Blue\n                                </label>\n                                <label>\n                                <Field type=\"checkbox\" name=\"variants\" value=\"Green\" />\n                                Green\n                                </label>\n                            </Box>\n                        </Grid>\n                        <Grid item>\n                            <Box id=\"checkbox-group-sizes\">Sizes</Box>\n                            <Box role=\"group\" aria-labelledby=\"checkbox-group-sizes\">\n                                <label>\n                                <Field type=\"checkbox\" name=\"sizes\" value=\"XS\" />\n                                XS\n                                </label>\n                                <label>\n                                <Field type=\"checkbox\" name=\"sizes\" value=\"S\" />\n                                S\n                                </label>\n                                <label>\n                                <Field type=\"checkbox\" name=\"sizes\" value=\"M\" />\n                                M\n                                </label>\n                                <label>\n                                <Field type=\"checkbox\" name=\"sizes\" value=\"L\" />\n                                L\n                                </label>\n                            </Box>\n                        </Grid>\n                        <Grid item lg={10} md={10} sm={10} xs ={10}>\n                            <Field name=\"price\" component={TextField} label=\"Price\">Price: </Field>\n                        </Grid>\n                        <Grid item lg={10} md={10} sm={10} xs ={10}>\n                            <Field name=\"quantity\" component={TextField} label=\"Quantity\">Quantity: </Field>\n                        </Grid>\n                        <Grid item lg={10} md={10} sm={10} xs ={10}>         \n                           <input type=\"file\" name=\"productImage\" onChange={handleFileInputChange} />\n                        </Grid>\n                        <Grid item lg={10} md={10} sm={10} xs ={10}>         \n                            { _id ? <Button className={classes.margin} variant=\"contained\" color=\"primary\" onClick={ () => handelSave(values)}>Save</Button> : <Button type=\"submit\" className={classes.margin} variant=\"contained\" color=\"primary\">Submit</Button>}\n                            <Button variant=\"contained\" color=\"primary\" onClick={ () => handelCancel()} >Cancel</Button>\n                        </Grid>\n                   </Grid>\n\n               </Form>\n            ) }\n       </Formik>\n       {/* {previewSource && (\n           <img src={previewSource} alt=\"image\"/>\n       )} */}\n       <Notification notify={notify} setNotify={setNotify}/>\n       </>\n    )\n}\n\nexport default AddNewProduct\n","\nimport React, { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n// import Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { createNewUser } from '../../redux/actions/user';\nimport Notification from '../Notification/Notification'\nimport { useHistory } from 'react-router';\nimport { AppState } from '../../types';\nimport { Link } from 'react-router-dom';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst initialState = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n}\n\nconst validationSchema = yup.object({\n    email: yup\n      .string()\n      .email('Enter a valid email')\n      .required('Email is required')\n})\n\n\nexport default function SignUp() {\n  const dispatch = useDispatch()\n  const [notify, setNotify] = useState({isOpen: false, message: '', type: ''})\n  const classes = useStyles();\n  const history = useHistory()\n  const { role} = useSelector( (state: AppState) => state.user )\n  const error = useSelector( (state: AppState) => state.user.error )\n  \n  const formik = useFormik( {\n    initialValues: initialState,\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      dispatch(createNewUser(values, history, \"signup\"))\n      setNotify({\n        isOpen: true,\n        message: 'User Created Successfully',\n        type: 'success'\n        })\n    }\n})\n// let errorExist;\n// useEffect( () => {\n//   error ? errorExist = error : \"\" \n// }, [error])\n\nconsole.log(error, \"whats the error?\")\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        {role === \"user\" ? (\n          <Typography component=\"h1\" variant=\"h5\">\n          <Typography>Hello</Typography>\n          Sign up\n        </Typography>\n        ) :\n         (\n          <Typography component=\"h1\" variant=\"h5\">\n          Create User\n        </Typography>\n        )}\n        \n        <form className={classes.form} noValidate onSubmit={formik.handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                value={formik.values.firstName}\n                onChange={formik.handleChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                value={formik.values.lastName}\n                onChange={formik.handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={formik.values.email}\n                error={formik.touched.email && Boolean(formik.errors.email)}\n                helperText={formik.touched.email && formik.errors.email}\n                onChange={formik.handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                onChange={formik.handleChange}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link to=\"/signin\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n          {/* <pre>{JSON.stringify(formik.values, null, 3)}</pre> */}\n        </form>\n      </div>\n         <div>{error ? `${error}` : \"\"}</div>\n      {/* <Notification notify={notify} setNotify={setNotify}/> */}\n    </Container>\n  );\n}","import React, {  useEffect } from 'react';\n// import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userLogin } from '../../redux/actions/user';\nimport { useHistory } from 'react-router';\nimport { AppState } from '../../types';\n// import useUser from '../../hooks/useUser';\nimport Link from '@material-ui/core/Link';\nimport { fetchCart } from '../../redux/actions';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst initialState = {\n    email: \"\",\n    password: \"\"\n}\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://rf-meyer.com/\">\n        R.F. Meyer\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  // const { role } = useSelector( (state: AppState) => state.user)\n  const userId = useSelector( (state: AppState) => state.user.userId)\n  const history = useHistory()\n\n  const formik = useFormik( {\n        initialValues: initialState,\n        onSubmit: (values) => {\n          dispatch(userLogin(values, history))\n        }\n  })\n\n  useEffect(()=> {\n    dispatch(fetchCart(userId))\n  },[dispatch,userId])\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n    <CssBaseline />\n    <div className={classes.paper}>\n      <Typography component=\"h1\" variant=\"h5\">\n        Sign In\n      </Typography>\n      <form className={classes.form} noValidate onSubmit={formik.handleSubmit}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              value={formik.values.email}\n              // error={formik.touched.email && Boolean(formik.errors.email)}\n              // helperText={formik.touched.email && formik.errors.email}\n              onChange={formik.handleChange}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              onChange={formik.handleChange}\n            />\n          </Grid>\n        </Grid>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Sign In\n        </Button>\n\n      </form>\n    </div>\n    <Box mt={5}>\n        <Copyright />\n      </Box>\n  </Container>\n  );\n}","import React, { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button } from '@material-ui/core';\n\nimport { deleteUser, fetchUser, getDialogData } from '../../redux/actions';\nimport { AppState } from '../../types';\n// import DashBoardUserForm from '../../components/DashBoardUserForm/DashBoardUserForm';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  tableContainer: {\n    marginTop: 50,\n  }\n});\n\nfunction Dashboard() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { users } = useSelector((state: AppState) => state.user)\n\n  useEffect( () => {\n    dispatch(fetchUser())\n  }, [dispatch])\n\n  const tableHeaders = [\"First Name\", \"Last Name\", \"Email\", \"Role\", \"Actions\"]\n\n  // type openDialogProps = {\n  //   openDialog: boolean\n  //   setOpenDialog: any\n  // }\n\n  // dispatch(getDialogData({isOpen: true, title: \"Add New User\", type: \"add\"}))\n  \nfunction handleEditUser(){\n  dispatch(getDialogData({isOpen: true, title: \"Update User\", type: \"edit\"}))\n  }\n\nfunction handleDelete(userId: string) {\n  if (window.confirm(\"Are you sure you want to delete this user?\")) {\n    dispatch(deleteUser(userId, history))\n  } \n}\n\nfunction handleAddUser() {\n  dispatch(getDialogData({isOpen: true, title: \"Add New User\", type: \"add\"}))\n  // setUserDialogForm({isOpen: true, title: \"Add New User\", type: \"add\"})\n}\n\n  return (\n    <>\n    <TableContainer component={Paper} className={classes.tableContainer}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"right\" colSpan={tableHeaders.length}>\n              <Link to={\"/dashboard/adduser\"}>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => handleAddUser()}>Add User</Button>\n              </Link>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            {tableHeaders.map( theader => <TableCell>{theader}</TableCell>)}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {users.map( user => {\n           return <TableRow key={user._id!}>\n              <TableCell>{user.firstName}</TableCell>\n              <TableCell>{user.lastName}</TableCell>\n              <TableCell>{user.email}</TableCell>\n              <TableCell>{user.role}</TableCell>\n              <TableCell>\n                <Link to={`/dashboard/edit/${user._id!}`}>\n                  <Button onClick={() => handleEditUser()}>\n                    <EditIcon />\n                  </Button>\n                </Link>\n                <Button onClick={ () => handleDelete(user._id!)}>\n                  <DeleteIcon />\n                </Button>\n              </TableCell>\n            </TableRow>\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    {/* <DashBoardUserForm userDialogForm={userDialogForm} setUserDialogForm={setUserDialogForm} /> */}\n    </>\n  );\n}\n\nexport default Dashboard;","import React from 'react'\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { Button, Grid, MenuItem, TextField } from '@material-ui/core';\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { createNewUser, updateUser } from '../../redux/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppState, User } from '../../types';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  dialog: {\n    margin: theme.spacing(5)\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    margin: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  role: \"\",\n}\n\nconst validationSchema = yup.object({\n  email: yup\n    .string()\n    .email('Enter a valid email')\n    .required('Email is required')\n})\n\nfunction DashBoardUserForm() {\n  const classes = useStyles();\n  // const theme = useTheme();\n  // const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const history = useHistory()\n  const { _id } = useParams<{ _id: string }>()\n  const dispatch= useDispatch()\n  const { users, dialog } = useSelector( (state: AppState) => state.user)\n  const filteredData: any = users.filter ( user => user._id === _id)\n  console.log(filteredData, \"from dashfrom\")\n\n  const handleClose = () => {\n    // setUserDialogForm({\n    //   ...userDialogForm,\n    //   isOpen: false,\n    // });\n    history.push('/dashboard')\n  };\n\n  const handleAddUser = (values: any) => {\n    dispatch(createNewUser(values, history, \"dashboard\"))\n    // dispatch(fetchUser())\n    // setUserDialogForm({\n    //   ...userDialogForm,\n    //   isOpen: false,\n    // });\n  }\n\n  const handleUpdate = (values: User) => {\n    dispatch(updateUser(values, history))\n  }\n\n  const dataValue = _id ? filteredData[0] : initialState;\n \n  const formik = useFormik( {\n    initialValues: dataValue,\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      // dispatch(createNewUser(values))\n      // setNotify({\n      //   isOpen: true,\n      //   message: 'User Created Successfully',\n      //   type: 'success'\n      //   })\n      history.push('/dashboard')\n    }\n})\n\n    return (\n      <div className={classes.dialog}>\n        <div className={classes.paper}>                \n          <form className={classes.form} noValidate onSubmit={formik.handleSubmit}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  name=\"firstName\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                  value={formik.values.firstName}\n                  onChange={formik.handleChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  value={formik.values.lastName}\n                  onChange={formik.handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  value={formik.values.email}\n                  error={formik.touched.email && Boolean(formik.errors.email)}\n                  helperText={formik.touched.email && formik.errors.email}\n                  onChange={formik.handleChange}\n                />\n              </Grid>\n              {_id ? \"\" :  <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  onChange={formik.handleChange}\n                />\n              </Grid>}\n              \n              <Grid item xs={12}>\n                <TextField\n                id=\"roles\"\n                select\n                label=\"Select Role\"\n                onChange={formik.handleChange}\n                variant=\"outlined\"\n                name=\"role\"\n                value={formik.values.role}\n                fullWidth\n                defaultValue\n                >\n                    <MenuItem value=\"admin\">admin</MenuItem>\n                    <MenuItem value=\"user\">user</MenuItem>\n                </TextField>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      <Button autoFocus onClick={handleClose} color=\"primary\" variant=\"contained\">\n        Cancel\n      </Button>\n\n      { dialog.type === \"add\" ? \n      \n      <Button type=\"submit\" color=\"primary\" variant=\"contained\" onClick={ () => handleAddUser(formik.values)}>\n        Submit\n      </Button> \n      :  \n      <Button onClick={() => handleUpdate(formik.values)} color=\"primary\" variant=\"contained\">\n        Update\n      </Button>}\n    </div>\n    )\n}\n\nexport default DashBoardUserForm\n","import { Button, Card, CardActionArea, CardActions, CardContent, CardMedia, makeStyles, Typography } from '@material-ui/core';\nimport React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { addItemToCart } from '../../redux/actions';\nimport { AppState } from '../../types';\n\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 200,\n      paddingTop: 40,\n    },\n    media: {\n        height: 700,\n        objectFit: 'cover',\n    },\n    padding: {\n        padding: 30,\n    },\n    stock: {\n      color: \"#00E041\"\n    },\n  });\n\n  type ParamTypes = {\n    id: string\n  }\nfunction ProductDetails() {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const { id } = useParams<ParamTypes>()\n  const displayProduct = useSelector( (state: AppState) => state.product.displayProduct)\n  const userId = useSelector( (state: AppState) => state.user.userId)\n  const [prod] = displayProduct.filter( product => product._id === id)\n  const [addToCartBtn, setAddToCartBtn] = useState(false)\n\n  if(prod.quantity <= 0){\n    setAddToCartBtn(true)\n  }\n\nconst handleAddToCart = (prodId: string) => {\n    dispatch(addItemToCart({\n      purchasedBy: userId,\n      items: [{\n        productId: prodId,\n        quantity: 1\n      }]\n    }))\n}\n    return (\n        <>\n        {/* <div>\n            inside product details\n        </div> */}\n        <Card className={classes.root + classes.padding} key={prod._id}>\n          <CardActionArea>\n            <CardMedia\n              className={classes.media}\n              component=\"img\"\n              alt={prod.name!}\n              image={prod.productImage!}\n              title=\"Picture here\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {prod.name!}\n              </Typography>\n              \n              <Typography variant=\"h6\" component=\"h1\">\n               ${prod.price!}\n              </Typography>\n              {prod.quantity > 0 ? <Typography variant=\"h6\" component=\"h1\" className={classes.stock}>\n               In stock\n              </Typography> : <Typography variant=\"h6\" component=\"h1\" className={classes.stock}>\n               Out of stock\n              </Typography>}\n              <Typography>\n                  {prod.description}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button size=\"small\" color=\"primary\" disabled={addToCartBtn}  onClick={() => handleAddToCart(prod._id!) }> \n                Add to Cart \n             </Button> \n          </CardActions>\n        </Card>\n        {/* <ConfirmDialog confirmDialog={confirmDialog} /> */}\n      </>\n      \n      \n      \n    )\n}\n\nexport default ProductDetails\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport { Grid, makeStyles } from '@material-ui/core';\nimport axios from 'axios'\n\nimport Home from './pages/Home/Home';\nimport ProductCatalog from './pages/ProductCatalog/ProductCatalog';\nimport Header from './components/Header/Header';\nimport AddNewProduct from './components/AddNewProduct/AddNewProduct';\nimport Signup from './components/Signup/Signup';\nimport Login from './components/Login/Login';\n\nimport './App.css';\nimport Dashboard from './pages/Dashboard/Dashboard'\nimport DashBoardUserForm from './components/DashBoardUserForm/DashBoardUserForm';\n// import PrivateRoute, {  PrivateRouteProps } from './components/PrivateRoute/PrivateRoute';\n// import { AppState } from './types';\n// import { useSelector } from 'react-redux';\nimport ProductDetails from './components/ProductDetails/ProductDetails';\n\naxios.defaults.withCredentials = true;\n\nconst useStyles = makeStyles({\n  root: {\n    paddingTop: 40,\n  },\n});\n\nfunction App() {\n    const classes = useStyles();\n    // const { isSignedIn, role} = useSelector( (state: AppState) => state.user)\n\n    // const initialStatePrivateRoute: PrivateRouteProps = {\n    //    path: \"\"\n    // }\n\n    // console.log(initialStatePrivateRoute, \"private value\")\n  return (\n    <div>\n    <Grid container className={classes.root}>\n      <Grid item xs={1} sm={2}/>\n      <Grid item xs={10} sm={8}>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route  path=\"/product\">\n              <ProductCatalog />\n            </Route>\n            <Route path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route path=\"/signin\">\n              <Login />\n            </Route>\n            <Route  exact path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route path=\"/addProduct\">\n              <AddNewProduct />\n            </Route>\n            <Route path=\"/editProduct/:_id\">\n              <AddNewProduct />\n            </Route>\n            <Route path=\"/productdetails/:id\">\n              <ProductDetails />\n            </Route>\n            <Route exact path=\"/dashboard/edit/:_id\">\n              <DashBoardUserForm />\n            </Route>\n            <Route exact path=\"/dashboard/adduser\">\n              <DashBoardUserForm />\n            </Route>\n             {/* <PrivateRoute path=\"/dashboard\" component={Dashboard} /> */}\n              {/* <Dashboard />\n            </PrivateRoute> */}\n            {/* <PrivateRoute path=\"/dashboard/adduser\" component={DashBoardUserForm} /> */}\n            {/* <PrivateRoute path=\"/dashboard/edit/:_id\" component={DashBoardUserForm} /> */}\n            {/* <PrivateRoute path=\"/editProduct/:_id\" component={AddNewProduct} /> */}\n            {/* <PrivateRoute path=\"/addProduct\" component={AddNewProduct} /> */}\n          </Switch>\n        </Router>   \n      </Grid>\n      <Grid item xs={1} sm={2}/>\n    </Grid> \n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CREATE_NEW_PRODUCT, GET_PRODUCT_SUCCESS, ProductActions, ProductState, SEARCH_KEYWORD } from \"../../types\";\n\nconst initialState: ProductState = {\n    displayProduct: [],\n    searchProduct: \"\"\n}\nconst product = ( state = initialState, action: ProductActions): ProductState => {\n    switch(action.type) {\n        case GET_PRODUCT_SUCCESS: {\n            return {...state, displayProduct: action.payload.data}\n        }\n\n        case CREATE_NEW_PRODUCT: {\n            const { data } = action.payload;\n\n            if(state.displayProduct.find( p => p.name === data.name)){\n                return state\n            }\n            return {\n                ...state, displayProduct: [...state.displayProduct, data]\n            }\n        }\n\n        case SEARCH_KEYWORD: {\n            return {...state, searchProduct: action.payload.text}\n        }\n\n        default: {\n            return state\n        }\n    } \n}\n\nexport default product;\n\n// case ADD_PRODUCT: {\n//     const { product } = action.payload\n//     if (state.inCart.find((p) => p.id === product.id)) {\n//       return state\n//     }\n//     Always return new state (e.g, new object) if changed\n//     return { ...state, inCart: [...state.inCart, product] }\n//   }","import { DIALOG_DATA, FETCH_ERROR, FETCH_PENDING, GET_USERS, GET_USER_ID, GET_USER_NAME, GET_USER_ROLE, SIGN_IN_SUCCESS, UserActions, UserState } from \"../../types\";\n\nconst initialState: UserState = {\n    isSignedIn: false,\n    role: \"\",\n    name: \"\",\n    userId: \"\",\n    users: [],\n    dialog: {\n        isOpen: false,\n        title: \"\",\n        type: \"\"\n    },\n    pending: false,\n    error: null\n}\n\nconst user = ( state = initialState, action: UserActions): UserState => {\n    switch(action.type) {\n        case FETCH_PENDING: {\n            return {...state, pending: true}\n        }\n        case FETCH_ERROR: {\n           return {...state, error: action.payload.data}\n        }\n        case SIGN_IN_SUCCESS: {\n            return {...state, isSignedIn: action.payload.isUserSignedIn, pending: false}\n        }\n        case GET_USER_ROLE: {\n            return {...state, role: action.payload.data}\n        }\n        case GET_USER_NAME: {\n            return {...state, name: action.payload.data}\n        }\n        case GET_USERS: {\n            return{...state, users: action.payload.data}\n        }\n        case DIALOG_DATA: {\n            return{...state, dialog: action.payload.dialog}\n        }\n        case GET_USER_ID: {\n            return{...state, userId: action.payload.data}\n        }\n\n\n        default: {\n            return state\n        }\n    } \n}\n\nexport default user;\n","\nimport { CartActions, CartState, FETCH_PENDING, ITEMS_IN_CART } from \"../../types\"\n\nconst cartInitState: CartState = {\n    inCart: {\n        purchasedBy: \"\",\n        items: [],\n        totalAmount: 0\n    } || undefined,\n    pending: false\n}\n\nconst cart = (state=cartInitState, action: CartActions): CartState => {\n    switch(action.type){\n        case FETCH_PENDING: {\n            return {...state, pending: true}\n        }\n        case ITEMS_IN_CART: {\n            const {items} = action.payload\n            return {...state, pending: false, inCart: items}\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport default cart","import {combineReducers} from 'redux'\nimport product from './product'\nimport user from './user'\nimport cart from './cart'\n\n\nconst createRootReducer = () => \ncombineReducers( {\n    product,\n    user,\n    cart\n})\n\nexport default createRootReducer;","import { createStore, applyMiddleware, compose} from 'redux'\nimport thunk from 'redux-thunk'\n\nimport { AppState } from '../types';\nimport createRootReducer from './reducers';\n\nconst middlewares = [thunk]\nlet composeEnhancers = compose\n\nconst initState: AppState = {\n    product: {\n        displayProduct: [],\n        searchProduct: \"\",\n    },\n    user: {\n        isSignedIn: false,\n        role: \"\",\n        name: \"\",\n        userId: \"\",\n        users: [],\n        dialog: {\n            isOpen: false,\n            title: \"\",\n            type: \"\"\n        },\n        pending: false,\n        error: null\n    },\n    cart: {\n        inCart: {\n            purchasedBy: \"\",\n            items: [],\n            totalAmount: 0\n        },\n        pending: false,\n    },\n}\n\nif ((window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n    composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  }\n\n\nconst store = createStore( createRootReducer(), initState ,composeEnhancers(applyMiddleware(...middlewares)));\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\n\nconst WithProvider = () => (\n  <Provider store={store}>\n      <App />\n  </Provider>\n)\nReactDOM.render(\n  <WithProvider />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}